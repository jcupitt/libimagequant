From 6aba29f14cd3ddf2d04f13077d9e8b04028e559d Mon Sep 17 00:00:00 2001
From: Mingye Wang <arthur200126@gmail.com>
Date: Wed, 14 Jul 2021 17:06:16 +0800
Subject: [PATCH] colordifference_stdc: use float as in SSE

The SSE implementation of the function uses single-precision float, whereas this one goes for.... double all over the place.

Extremely unscientific comparisons on godbolt (https://gcc.godbolt.org/z/oa3hP5ffs) shows that both Clang and GCC do much better generating code when float is used.

--- a/pam.h
+++ b/pam.h
@@ -135,12 +135,12 @@ inline static rgba_pixel f_to_rgb(const float gamma, const f_pixel px)
     };
 }
 
-ALWAYS_INLINE static double colordifference_ch(const double x, const double y, const double alphas);
-inline static double colordifference_ch(const double x, const double y, const double alphas)
+ALWAYS_INLINE static float colordifference_ch(const float x, const float y, const float alphas);
+inline static float colordifference_ch(const float x, const float y, const float alphas)
 {
     // maximum of channel blended on white, and blended on black
     // premultiplied alpha and backgrounds 0/1 shorten the formula
-    const double black = x-y, white = black+alphas;
+    const float black = x-y, white = black+alphas;
     return black*black + white*white;
 }
 
@@ -160,7 +160,7 @@ inline static float colordifference_stdc(const f_pixel px, const f_pixel py)
     // (px.rgb - px.a) - (py.rgb - py.a)
     // (px.rgb - py.rgb) + (py.a - px.a)
 
-    const double alphas = py.a-px.a;
+    const float alphas = py.a-px.a;
     return colordifference_ch(px.r, py.r, alphas) +
            colordifference_ch(px.g, py.g, alphas) +
            colordifference_ch(px.b, py.b, alphas);
